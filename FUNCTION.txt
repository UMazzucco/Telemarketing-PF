DROP PROCEDURE IF EXISTS reporte_liderazgo;

DELIMITER $$
CREATE PROCEDURE reporte_liderazgo()
BEGIN
	DECLARE estrato INT DEFAULT 1;
    DECLARE contador INT DEFAULT 0;
    
    DROP TABLE IF EXISTS reporte_liderazgo;
    CREATE TABLE reporte_liderazgo SELECT * FROM empleados;
	ALTER TABLE reporte_liderazgo ADD COLUMN nivel INT DEFAULT NULL, ADD COLUMN subalternos INT DEFAULT NULL;
    
    UPDATE reporte_liderazgo SET nivel = estrato WHERE id_manager IS NULL;
    
    WHILE (SELECT COUNT(id) FROM reporte_liderazgo) <> (SELECT COUNT(nivel) FROM reporte_liderazgo) DO
		SET estrato = estrato +1;
		DROP TABLE IF EXISTS emplea2;
		CREATE TABLE emplea2 SELECT * FROM reporte_liderazgo;
		UPDATE reporte_liderazgo SET nivel = estrato WHERE id_manager IN (SELECT id FROM emplea2 WHERE nivel = estrato - 1);
    END WHILE;
    
    SET contador = estrato;

	DROP TABLE IF EXISTS emplea2;
	CREATE TABLE emplea2 SELECT DISTINCT id_manager FROM reporte_liderazgo WHERE id_manager IS NOT NULL;
    
	UPDATE reporte_liderazgo SET subalternos = 0 WHERE id NOT IN (SELECT id_manager FROM emplea2);    
    
	WHILE (SELECT COUNT(id) FROM reporte_liderazgo) <> (SELECT COUNT(subalternos) FROM reporte_liderazgo) DO

		SET contador = contador - 1;
	
    	DROP TABLE IF EXISTS emplea2;
		CREATE TABLE emplea2 SELECT * FROM reporte_liderazgo WHERE (nivel = contador OR nivel = contador + 1) AND (id_manager IS NOT NULL);
	
    	UPDATE reporte_liderazgo SET subalternos = (SELECT COUNT(id)+SUM(subalternos) FROM emplea2 WHERE emplea2.id_manager = reporte_liderazgo.id) WHERE nivel = contador AND id IN (SELECT DISTINCT id_manager FROM emplea2);
		
    END WHILE;
    DROP TABLE emplea2;
    ALTER TABLE reporte_liderazgo DROP COLUMN nivel;   
END$$
DELIMITER ;

CALL reporte_liderazgo();
SELECT nombre AS empleado, subalternos FROM reporte_liderazgo ORDER BY subalternos DESC;